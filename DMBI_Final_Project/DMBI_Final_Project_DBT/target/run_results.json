{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v5.json", "dbt_version": "1.7.9", "generated_at": "2025-03-09T05:26:27.104582Z", "invocation_id": "1e742ac0-250c-4cec-ac2b-bd1b6c3c77cd", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-09T05:26:23.104317Z", "completed_at": "2025-03-09T05:26:23.113938Z"}, {"name": "execute", "started_at": "2025-03-09T05:26:23.115881Z", "completed_at": "2025-03-09T05:26:23.609817Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.5081748962402344, "adapter_response": {"_message": "SUCCESS 2", "code": "SUCCESS", "rows_affected": 2}, "message": "SUCCESS 2", "failures": null, "unique_id": "model.DMBI_Final_Project_DBT.kpi_avg_installation_price", "compiled": true, "compiled_code": "\n\n-- Selecting finance type and the average installation price for \"Individual Household\" customers\nSELECT \n    fin.finance_type AS finance_type,  -- Finance type category\n    ROUND(COALESCE(AVG(sales.installation_price), 0), 2) AS avg_installation_price  -- Average installation price rounded to 2 decimal places\nFROM dmbi_fa.fact_sales sales\n\n-- Joining with customer type dimension to filter only 'Individual Household' customers\nJOIN dmbi_fa.dim_customer_type cust\n    ON sales.customer_type_id = cust.customer_type_id\n\n-- Joining with finance type dimension to get finance type names\nJOIN dmbi_fa.dim_finance_type fin\n    ON sales.finance_type_id = fin.finance_type_id\n\n-- Filtering for only 'Individual Household' customers to ensure we analyze the right group\nWHERE cust.customer_type = 'Individual Household'\n\n-- Grouping by finance type to calculate the average installation price per finance type\nGROUP BY fin.finance_type\n\n-- Sorting the results in descending order to show the most expensive installations first\nORDER BY avg_installation_price DESC", "relation_name": "`dmbi_fa`.`kpi_avg_installation_price`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-09T05:26:23.615296Z", "completed_at": "2025-03-09T05:26:23.618146Z"}, {"name": "execute", "started_at": "2025-03-09T05:26:23.619358Z", "completed_at": "2025-03-09T05:26:24.020343Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.40787529945373535, "adapter_response": {"_message": "SUCCESS 48", "code": "SUCCESS", "rows_affected": 48}, "message": "SUCCESS 48", "failures": null, "unique_id": "model.DMBI_Final_Project_DBT.kpi_leads_province_analysis", "compiled": true, "compiled_code": "\n\n-- First, we calculate the number of leads, total peak power, and total installation price per ZIPCODE\nWITH LEADS_COUNT AS (\n    SELECT \n        ZIPCODE,  -- The ZIPCODE for each group of leads\n        COUNT(LEAD_ID) AS LEADS_COUNT,  -- Total number of leads for the given ZIPCODE\n        SUM(INSTALLATION_PEAK_POWER_KW) AS INSTALLATION_PEAK_POWER,  -- Total installation peak power for the given ZIPCODE\n        SUM(INSTALLATION_PRICE) AS INSTALLATION_PRICE  -- Total installation price for the given ZIPCODE\n    FROM DMBI_FA.FACT_SALES\n    GROUP BY ZIPCODE\n    HAVING COUNT(LEAD_ID) > 5  -- We only want ZIPCODEs with more than 5 leads\n)\n\n-- Then, we aggregate the results by province\nSELECT \n    ZC.PROVINCE AS province,  -- The province associated with each ZIPCODE\n    SUM(LC.LEADS_COUNT) AS num_leads_per_province,  -- The total number of leads per province\n    ROUND(SUM(LC.INSTALLATION_PEAK_POWER) / SUM(LC.LEADS_COUNT), 2) AS avg_peal_power,  -- Average peak power per lead in the province\n    ROUND(SUM(LC.INSTALLATION_PRICE) / SUM(LC.LEADS_COUNT), 2) AS avg_installation_price  -- Average installation price per lead in the province\nFROM LEADS_COUNT LC\n    -- Joining LEADS_COUNT with the DIM_ZIPCODE table to get the province information\n    JOIN DMBI_FA.DIM_ZIPCODE ZC\n        ON LC.ZIPCODE = ZC.ZIPCODE\nGROUP BY ZC.province  -- Group by province to calculate the aggregates at the provincial level\nORDER BY num_leads_per_province DESC  -- Sorting the results by the number of leads in descending order", "relation_name": "`dmbi_fa`.`kpi_leads_province_analysis`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-09T05:26:24.025595Z", "completed_at": "2025-03-09T05:26:24.031329Z"}, {"name": "execute", "started_at": "2025-03-09T05:26:24.032494Z", "completed_at": "2025-03-09T05:26:26.727127Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 2.7036404609680176, "adapter_response": {"_message": "SUCCESS 860", "code": "SUCCESS", "rows_affected": 860}, "message": "SUCCESS 860", "failures": null, "unique_id": "model.DMBI_Final_Project_DBT.kpi_sales_temp_correlation", "compiled": true, "compiled_code": "\n\n-- Calculate sales_done and leads count per ZIPCODE in the 'sales_fact' table\nWITH sales_done AS (\n    SELECT\n        zipcode,\n        COUNT(CASE WHEN project_validation_date IS NOT NULL THEN 1 END) AS sales_done,  -- Count of completed sales (i.e., sales with a validated project)\n        COUNT(LEAD_ID) AS LEADS_COUNT  -- Total number of leads per ZIPCODE\n    FROM DMBI_FA.fact_sales\n    JOIN DMBI_FA.dim_phases\n\t\tON fact_sales.current_phase_id = dim_phases.phase_id\n    WHERE dim_phases.phase_name = \"Validated project\"  -- Filter for sales in the \"Validated project\" phase\n    GROUP BY zipcode  -- Group by ZIPCODE to calculate aggregates per ZIPCODE\n),\n\n-- Calculate total leads count per ZIPCODE in the 'fact_sales' table\nlead_count AS (\n    SELECT \n        zipcode,\n        COUNT(lead_id) AS lead_count  -- Total number of leads per ZIPCODE\n    FROM DMBI_FA.fact_sales\n    GROUP BY zipcode  -- Group by ZIPCODE to calculate the total leads count\n),\n\n-- Calculate average temperature per ZIPCODE in the 'fact_weather' table\nweather AS (\n    SELECT \n        zipcode,\n        AVG(temperature) AS avg_temperature  -- Average temperature per ZIPCODE\n    FROM DMBI_FA.fact_weather\n    GROUP BY zipcode  -- Group by ZIPCODE to calculate the average temperature\n)\n\n-- Final SELECT to combine the results from the previous CTEs\nSELECT \n    sd.zipcode,\n    sd.sales_done,  -- The number of completed sales per ZIPCODE\n    lc.lead_count,  -- The total number of leads per ZIPCODE\n    ROUND(CASE  -- Calculate the sales conversion percentage\n        WHEN lc.lead_count > 0 THEN (sd.sales_done / lc.lead_count) * 100  -- Sales conversion formula\n        ELSE 0  -- If no leads exist, sales conversion is 0\n    END, 2) AS sales_conversion,  -- Round the conversion to 2 decimal places\n    ROUND(w.avg_temperature, 2) AS avg_temperature  -- Round the average temperature to 2 decimal places\nFROM sales_done sd\n    -- Left join to bring in the lead count for each ZIPCODE\n    LEFT JOIN lead_count lc\n        ON sd.zipcode = lc.zipcode\n    -- Left join to bring in the average temperature for each ZIPCODE\n    LEFT JOIN weather w\n        ON sd.zipcode = w.zipcode\n-- Only include ZIPCODEs with results (non-null)\nHAVING sd.zipcode IS NOT NULL\n-- Sort by the number of completed sales in descending order\nORDER BY sd.sales_done DESC", "relation_name": "`dmbi_fa`.`kpi_sales_temp_correlation`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-09T05:26:26.732568Z", "completed_at": "2025-03-09T05:26:26.735448Z"}, {"name": "execute", "started_at": "2025-03-09T05:26:26.736429Z", "completed_at": "2025-03-09T05:26:26.922807Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.19243502616882324, "adapter_response": {"_message": "SUCCESS 5", "code": "SUCCESS", "rows_affected": 5}, "message": "SUCCESS 5", "failures": null, "unique_id": "model.DMBI_Final_Project_DBT.kpi_top_ko_reasons", "compiled": true, "compiled_code": "\n\n-- Create a Common Table Expression (CTE) to calculate the count and percentage of each KO_REASON_ID in the sales fact table\nWITH KO_REASONS AS (\n    SELECT \n        KO_REASON_ID,  -- KO_REASON_ID from the sales fact table\n        COUNT(KO_REASON_ID) AS KO_COUNT,  -- Count of occurrences for each KO_REASON_ID\n        -- Calculate the percentage of each KO_REASON_ID as a proportion of the total number of KO_REASON_IDs in the entire sales fact table\n        (COUNT(KO_REASON_ID) / (SELECT COUNT(KO_REASON_ID) FROM DMBI_FA.FACT_SALES) * 100) AS PERCENTAGE,\n        -- Use DENSE_RANK to rank KO_REASON_IDs by the count, in descending order (more common reasons ranked higher)\n        DENSE_RANK() OVER (ORDER BY COUNT(*) DESC) AS DENSE_RANK_NUM\n    FROM DMBI_FA.FACT_SALES\n    GROUP BY KO_REASON_ID  -- Group by KO_REASON_ID to get counts for each unique reason\n    ORDER BY KO_COUNT DESC  -- Order by the KO_COUNT to ensure the most common KO_REASON_IDs appear first\n)\n-- Final SELECT to pull the top 5 KO reasons and their associated counts and percentages\nSELECT \n    DKR.KO_REASON AS ko_reason,  -- KO_REASON from the dimension table\n    KR.KO_COUNT AS ko_count,  -- Count of occurrences of the KO_REASON_ID in the sales fact table\n    CAST(KR.PERCENTAGE AS DECIMAL(10,2)) AS percentage  -- Convert percentage to a decimal with 2 decimal places\nFROM KO_REASONS KR\n    -- Left join to bring in the KO_REASON description from the dimension table\n    LEFT JOIN DMBI_FA.DIM_KO_REASON DKR\n        ON KR.KO_REASON_ID = DKR.KO_REASON_ID\n-- Filter to only include the top 5 KO_REASON_IDs based on count\nWHERE DENSE_RANK_NUM <= 5", "relation_name": "`dmbi_fa`.`kpi_top_ko_reasons`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-09T05:26:26.927325Z", "completed_at": "2025-03-09T05:26:26.931395Z"}, {"name": "execute", "started_at": "2025-03-09T05:26:26.932376Z", "completed_at": "2025-03-09T05:26:27.086795Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.1618800163269043, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.DMBI_Final_Project_DBT.kpi_top_sales_month_cash", "compiled": true, "compiled_code": "\n\n-- Create a Common Table Expression (CTE) to rank sales by month based on the total number of sales for 'cash' finance type\nWITH RANKED_SALES AS (\n    SELECT \n        DATE_FORMAT(project_validation_date, '%Y-%m') AS SALES_MONTH,  -- Format the project_validation_date to year-month format\n        COUNT(*) AS TOTAL_SALES,  -- Count the total number of sales for each month\n        -- Use DENSE_RANK to assign ranks to months based on the total number of sales, in descending order\n        DENSE_RANK() OVER (ORDER BY COUNT(*) DESC) AS DENSE_RANK_NUM\n    FROM DMBI_FA.FACT_SALES SF\n    LEFT JOIN DMBI_FA.DIM_FINANCE_TYPE FT  -- Join with DIM_FINANCE_TYPE to filter on 'cash' finance type\n        ON SF.FINANCE_TYPE_ID = FT.FINANCE_TYPE_ID\n    WHERE FT.FINANCE_TYPE = 'cash'  -- Filter to include only sales with 'cash' as the finance type\n    GROUP BY SALES_MONTH  -- Group by the formatted sales month to calculate monthly sales count\n    HAVING SALES_MONTH IS NOT NULL  -- Ensure that only valid (non-null) months are included\n)\n-- Final SELECT to retrieve the top-ranked sales months based on total sales for 'cash' finance type\nSELECT \n    sales_month,  -- The sales month (year-month format)\n    total_sales  -- The total number of sales for the given month\nFROM RANKED_SALES\n-- Filter to only include the top sales month(s) (adjust the condition to return top N months)\nWHERE DENSE_RANK_NUM <= 1", "relation_name": "`dmbi_fa`.`kpi_top_sales_month_cash`"}], "elapsed_time": 4.0950703620910645, "args": {"send_anonymous_usage_stats": true, "log_format": "default", "cache_selected_only": false, "defer": false, "quiet": false, "use_colors": true, "enable_legacy_logger": false, "log_level": "info", "profiles_dir": "C:\\Users\\kotya\\.dbt", "populate_cache": true, "select": ["kpi_top_ko_reasons", "kpi_top_sales_month_cash", "kpi_avg_installation_price", "kpi_leads_province_analysis", "kpi_sales_temp_correlation"], "which": "run", "version_check": true, "warn_error_options": {"include": [], "exclude": []}, "printer_width": 80, "log_file_max_bytes": 10485760, "use_colors_file": true, "log_path": "c:\\Users\\kotya\\Documents\\EAE\\DMBI\\DMBI_Final_Project\\DMBI_Final_Project_DBT\\logs", "macro_debugging": false, "strict_mode": false, "vars": {}, "static_parser": true, "show_resource_report": false, "write_json": true, "log_level_file": "debug", "exclude": [], "partial_parse": true, "log_format_file": "debug", "favor_state": false, "invocation_command": "dbt run --select kpi_top_ko_reasons kpi_top_sales_month_cash kpi_avg_installation_price kpi_leads_province_analysis kpi_sales_temp_correlation", "print": true, "project_dir": "c:\\Users\\kotya\\Documents\\EAE\\DMBI\\DMBI_Final_Project\\DMBI_Final_Project_DBT", "partial_parse_file_diff": true, "indirect_selection": "eager", "introspect": true}}